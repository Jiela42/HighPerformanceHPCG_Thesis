Striped Box coloring (coloringBox 4x4x4),A100,256x256x256,SymGS
"ID","Process ID","Process Name","Host Name","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description"
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.20",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.08",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197675",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.18",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.18",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","183.46",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.73",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.02",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184728.41",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.23",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.79",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.79",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","859.71",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.21",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.18",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.62",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.79",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.57",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,452 sectors to be read from DRAM, which is 1.3x of the 3,518,587 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.79",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.21",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.53",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.63",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.7% of the total average of 33.5 cycles between issuing two instructions."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.53",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984038",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"0","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019031 excessive sectors (49% of the total 8162039 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202494",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.47",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.47",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.52",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.67",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.30",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190370.57",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.70",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.08",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.08",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.29",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.93",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.47",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.77",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,120 sectors to be read from DRAM, which is 1.3x of the 3,911,551 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.15",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.85",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.46",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.55",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.4% of the total average of 34.5 cycles between issuing two instructions."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.39",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18983978",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"1","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564896 excessive sectors (52% of the total 8707904 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201659",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.75",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.75",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.31",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.83",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.60",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188920.16",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.26",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.26",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","838.13",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.81",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.75",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.28",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.88",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.76",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 336.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,176 sectors to be read from DRAM, which is 1.3x of the 3,916,181 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.33",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.67",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.20",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.29",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.6% of the total average of 34.2 cycles between issuing two instructions."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.47",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984013",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"2","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4568928 excessive sectors (52% of the total 8711936 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","193346",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.43",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.43",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.71",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.25",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.53",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181575.09",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.73",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.97",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.91",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.20",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.97",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.20",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.9%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.68",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.52",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.43",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.76",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.65",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.24",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,488 sectors to be read from DRAM, which is 1.3x of the 3,729,092 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.21",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.79",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.67",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.67 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","32.95",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.05",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 21.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.1% of the total average of 33.0 cycles between issuing two instructions."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.56",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984052",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"3","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453855 excessive sectors (45% of the total 7596865 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198374",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.98",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.98",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.76",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.76",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.94",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185266.30",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.16",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.72",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.72",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.01",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.29",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.98",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.67",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.87",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.55",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 311.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,598 sectors to be read from DRAM, which is 1.3x of the 3,510,579 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.76",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.24",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.57",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.67",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.6 cycles between issuing two instructions."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.69",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984107",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"4","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019199 excessive sectors (49% of the total 8162303 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201173",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.83",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.83",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.59",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.13",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.68",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188601.49",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.85",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.30",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.30",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","832.01",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.88",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.83",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.43",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,212 sectors to be read from DRAM, which is 1.3x of the 3,911,816 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.50",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.50",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.95",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.04",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.9 cycles between issuing two instructions."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.68",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984101",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"5","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202698",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.43",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.43",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.79",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.24",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.44",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188646.22",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.68",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.29",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.29",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","836.07",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.74",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.43",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.36",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.71",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,320 sectors to be read from DRAM, which is 1.3x of the 3,916,339 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.51",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.49",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.94",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.03",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.6% of the total average of 33.9 cycles between issuing two instructions."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.64",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984084",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"6","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","194719",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.03",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.03",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","192.13",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.31",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.11",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","182308.80",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.57",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.10",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.10",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.8%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","820.82",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.42",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.03",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.12",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.58",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,628 sectors to be read from DRAM, which is 1.3x of the 3,730,433 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.18",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.82",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.00",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.09",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 21.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.3% of the total average of 33.0 cycles between issuing two instructions."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.76",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984136",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"7","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453952 excessive sectors (45% of the total 7597056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198033",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.08",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.08",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.85",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.81",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.04",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184287.13",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.19",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.85",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.85",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","809.56",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.75",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.08",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.66",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.88",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.55",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,598 sectors to be read from DRAM, which is 1.3x of the 3,511,015 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.85",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.15",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.45",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.54",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.9% of the total average of 33.4 cycles between issuing two instructions."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.67",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984096",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"8","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019200 excessive sectors (49% of the total 8162304 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202436",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.49",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.49",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.86",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.79",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.32",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188342.31",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.71",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.33",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.33",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","839.43",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.49",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.39",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.76",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,196 sectors to be read from DRAM, which is 1.3x of the 3,912,159 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.39",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.61",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.12",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.21",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.1 cycles between issuing two instructions."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.66",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984091",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"9","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201557",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.77",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.77",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.26",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.88",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.58",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187778.21",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.81",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.40",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.40",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","842.72",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.77",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.32",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.71",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,304 sectors to be read from DRAM, which is 1.3x of the 3,916,212 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.37",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.63",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.14",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.23",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.1 cycles between issuing two instructions."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.71",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984116",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"10","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196502",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.51",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.51",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.14",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.22",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.70",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181097.90",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.37",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.97",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.27",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.97",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.27",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.9%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","812.35",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.31",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.51",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.88",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.58",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,608 sectors to be read from DRAM, which is 1.3x of the 3,729,934 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.06",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.94",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.16",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.25",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.4% of the total average of 33.2 cycles between issuing two instructions."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.74",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984129",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"11","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453951 excessive sectors (45% of the total 7597057 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198974",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.82",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.82",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.76",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.78",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.75",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184614.80",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.09",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.80",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.80",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.12",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.10",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.82",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.44",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.91",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.54",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,730 sectors to be read from DRAM, which is 1.3x of the 3,510,655 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.85",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.15",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.44",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.54",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.33",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 33.4 cycles between issuing two instructions."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.76",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984138",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"12","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019303 excessive sectors (49% of the total 8162503 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201688",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.70",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.70",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.01",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.21",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.59",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188932.75",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.26",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.26",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","830.39",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.02",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.70",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.39",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.63",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,334 sectors to be read from DRAM, which is 1.3x of the 3,911,140 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.34",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.66",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.19",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.28",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.6% of the total average of 34.2 cycles between issuing two instructions."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.82",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984164",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"13","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4565152 excessive sectors (52% of the total 8708352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202412",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.52",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.52",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.95",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.06",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.35",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189209.11",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.72",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.23",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.23",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.0%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","835.47",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.84",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.52",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.30",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.66",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,348 sectors to be read from DRAM, which is 1.3x of the 3,916,394 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.25",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.75",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.32",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.41",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 34.3 cycles between issuing two instructions."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.86",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984179",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"14","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569184 excessive sectors (52% of the total 8712384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","194834",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.00",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.00",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.62",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.36",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.13",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183829.01",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.56",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.91",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.91",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","823.15",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.43",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.00",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.01",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.19",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,726 sectors to be read from DRAM, which is 1.3x of the 3,730,617 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.05",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.95",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.17",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.26",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.6% of the total average of 33.2 cycles between issuing two instructions."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.91",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984200",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"15","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3454111 excessive sectors (45% of the total 7597313 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201808",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.28",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.28",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.05",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.41",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.13",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188139.93",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.37",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.37",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","799.93",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.32",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.28",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.94",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,130 sectors to be read from DRAM, which is 1.3x of the 3,527,509 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.45",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.55",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.02",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.12",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.0 cycles between issuing two instructions."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.59",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992704",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"16","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030486 excessive sectors (49% of the total 8191926 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203442",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.49",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.49",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.54",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.74",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.30",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190350.84",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.62",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.10",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.10",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.14",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.20",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.49",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.07",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.87",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,640 sectors to be read from DRAM, which is 1.3x of the 3,931,172 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.27",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.73",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.29",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.38",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.3 cycles between issuing two instructions."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.55",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992686",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"17","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204430",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.20",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.20",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.31",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.73",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.99",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190795.24",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.51",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.04",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.04",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.95",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.36",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.20",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","45.97",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","36.02",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,702 sectors to be read from DRAM, which is 1.3x of the 3,932,513 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.98",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.02",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.72",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.82",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.0% of the total average of 34.7 cycles between issuing two instructions."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.71",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992753",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"18","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198051",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.32",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.32",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","195.01",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","15.95",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.61",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185170",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.20",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.74",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.74",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","812.39",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.54",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.32",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.61",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.75",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.15",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 293.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,080 sectors to be read from DRAM, which is 1.3x of the 3,745,845 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.93",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.07",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.34",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.43",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 33.3 cycles between issuing two instructions."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.72",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992757",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"19","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473368 excessive sectors (45% of the total 7634810 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201145",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.45",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.45",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.31",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.66",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.36",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188007.83",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.86",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.38",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.38",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","802.87",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.39",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.45",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.22",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.90",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.50",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,192 sectors to be read from DRAM, which is 1.3x of the 3,529,220 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.21",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.79",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.37",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.47",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.0% of the total average of 34.4 cycles between issuing two instructions."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939905",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.88",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992829",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409025",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.71",
"20","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030463 excessive sectors (49% of the total 8191999 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","205163",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.99",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.99",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.48",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.98",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.82",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190966.94",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.43",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.85",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.02",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.02",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.44",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.27",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.99",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.25",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.65",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.67",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,792 sectors to be read from DRAM, which is 1.3x of the 3,931,877 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.99",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.01",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.71",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.80",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.1% of the total average of 34.7 cycles between issuing two instructions."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992799",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"21","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204523",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.16",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.16",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.79",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.98",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.99",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192135.13",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.50",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.88",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.88",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.96",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.44",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.16",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.13",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.85",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,784 sectors to be read from DRAM, which is 1.3x of the 3,931,585 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.93",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.07",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.80",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.90",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.1% of the total average of 34.8 cycles between issuing two instructions."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.82",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992801",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"22","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198269",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.25",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.25",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.50",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.38",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.45",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183885.23",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.18",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.91",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.91",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.61",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.40",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.25",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.09",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.11",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,210 sectors to be read from DRAM, which is 1.3x of the 3,745,175 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.74",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.26",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.60",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.70",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.8% of the total average of 33.6 cycles between issuing two instructions."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992781",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"23","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202404",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.10",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.10",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.18",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.54",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.17",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188487.11",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.72",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.33",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.33",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","799.36",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.06",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.10",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.25",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.95",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.45",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 314.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,194 sectors to be read from DRAM, which is 1.3x of the 3,526,492 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.34",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.66",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.19",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.28",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.8% of the total average of 34.2 cycles between issuing two instructions."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992805",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"24","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203197",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.53",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.53",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.26",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.62",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.36",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190940.25",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.64",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.03",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.03",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","829.19",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.20",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.53",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.11",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.83",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,772 sectors to be read from DRAM, which is 1.3x of the 3,932,043 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.05",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.95",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.61",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.71",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.6 cycles between issuing two instructions."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992799",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"25","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204574",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.15",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.15",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.15",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.66",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.99",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190970.65",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.50",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.02",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.02",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.56",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.02",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.15",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.09",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.84",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,798 sectors to be read from DRAM, which is 1.3x of the 3,931,886 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.11",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.89",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.52",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.62",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.4% of the total average of 34.5 cycles between issuing two instructions."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.93",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992850",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"26","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197576",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.45",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.45",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.30",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.08",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.58",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185144.46",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.26",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.75",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.75",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","815.24",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.54",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.45",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.80",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.67",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.15",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,214 sectors to be read from DRAM, which is 1.3x of the 3,745,341 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.80",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.20",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.52",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.62",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.0% of the total average of 33.5 cycles between issuing two instructions."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.75",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992771",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"27","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201220",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.43",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.43",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.89",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.40",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.39",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188476.28",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.86",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.33",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.33",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","800.62",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.38",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.43",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.31",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","38.00",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.49",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,202 sectors to be read from DRAM, which is 1.3x of the 3,526,330 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.47",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.53",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.99",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.08",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.0 cycles between issuing two instructions."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992782",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"28","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203633",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.42",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.42",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.16",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.05",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.20",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191548.03",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.59",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.95",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.95",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","829.66",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.79",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.42",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.10",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.87",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,788 sectors to be read from DRAM, which is 1.3x of the 3,931,318 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.96",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.04",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.75",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.85",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.7 cycles between issuing two instructions."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.94",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992856",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"29","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203610",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.42",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.42",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.90",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.94",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.33",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191232.42",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.60",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.99",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.99",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","830.69",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.29",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.42",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.06",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.77",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,778 sectors to be read from DRAM, which is 1.3x of the 3,932,418 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.94",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.06",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.78",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.88",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.4% of the total average of 34.8 cycles between issuing two instructions."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.71",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992754",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"30","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196703",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.70",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.70",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.02",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.35",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.83",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184120.08",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.35",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.88",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.88",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","820.83",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.60",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.70",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.90",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.67",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.17",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,194 sectors to be read from DRAM, which is 1.3x of the 3,745,280 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.80",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.20",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.53",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.62",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 33.5 cycles between issuing two instructions."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.78",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992784",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"31","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200306",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.69",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.69",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.14",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.53",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.63",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187619.83",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.95",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.43",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.43",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","799.60",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.23",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.69",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.60",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.92",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.51",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,206 sectors to be read from DRAM, which is 1.3x of the 3,527,248 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.38",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.62",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.12",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.22",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 34.1 cycles between issuing two instructions."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.64",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992723",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"32","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203979",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.34",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.34",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.51",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.70",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.26",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190869.01",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.56",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.03",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.03",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.44",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.12",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.34",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.40",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.69",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.68",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,770 sectors to be read from DRAM, which is 1.3x of the 3,932,142 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.01",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.99",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.68",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.78",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.0% of the total average of 34.7 cycles between issuing two instructions."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.58",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992697",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"33","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204475",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.19",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.19",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.06",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.78",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.06",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190205.38",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.50",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.11",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.11",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.10",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.49",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.19",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.31",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.69",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,802 sectors to be read from DRAM, which is 1.3x of the 3,932,075 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.90",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.10",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.84",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.94",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 34.8 cycles between issuing two instructions."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.59",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992703",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"34","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196960",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.63",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.63",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.70",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.02",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.89",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184725.53",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.33",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.80",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.80",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","817.98",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.53",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.63",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.86",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.63",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.15",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 293.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,202 sectors to be read from DRAM, which is 1.3x of the 3,748,738 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.97",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.03",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.28",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.38",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 33.3 cycles between issuing two instructions."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.68",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992740",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"35","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200364",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.66",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.66",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.59",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.55",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.60",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188202.09",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.95",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.36",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.36",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","797.70",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.56",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.66",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.62",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.91",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.50",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,196 sectors to be read from DRAM, which is 1.3x of the 3,529,528 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.28",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.72",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.27",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.37",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 34.3 cycles between issuing two instructions."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992813",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"36","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203040",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.59",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.59",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.06",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.00",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.41",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190815.25",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.66",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.04",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.04",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","830.15",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.65",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.59",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.47",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,782 sectors to be read from DRAM, which is 1.3x of the 3,932,158 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.04",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.96",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.63",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.73",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.6 cycles between issuing two instructions."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.79",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992789",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"37","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204234",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.25",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.25",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.06",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.12",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.09",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190681.93",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.53",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.06",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.06",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.96",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.12",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.25",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.42",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.66",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,784 sectors to be read from DRAM, which is 1.3x of the 3,931,670 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.03",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.97",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.65",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.75",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.7% of the total average of 34.6 cycles between issuing two instructions."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992796",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"38","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196921",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.63",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.63",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.47",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.23",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.85",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183832.51",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.33",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.92",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.92",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","818.79",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.28",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.63",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.18",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.57",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.14",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,202 sectors to be read from DRAM, which is 1.3x of the 3,745,340 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.07",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.93",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.14",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.23",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 33.1 cycles between issuing two instructions."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.72",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992761",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"39","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201201",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.42",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.42",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.89",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.59",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.45",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187397.48",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.86",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.46",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.46",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","800.57",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.15",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.42",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.63",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.77",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.47",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,184 sectors to be read from DRAM, which is 1.3x of the 3,526,405 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.26",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.74",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.30",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.40",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.3 cycles between issuing two instructions."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992781",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"40","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204417",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.21",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.21",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.47",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.68",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.98",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190219.99",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.51",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.11",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.11",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.46",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.34",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.21",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.67",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,778 sectors to be read from DRAM, which is 1.3x of the 3,931,194 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.99",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.01",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.70",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.79",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.7% of the total average of 34.7 cycles between issuing two instructions."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992806",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"41","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203535",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.45",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.45",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.31",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.77",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.33",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189593.03",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.60",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.19",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.19",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.0%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.03",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.15",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.45",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.39",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,780 sectors to be read from DRAM, which is 1.3x of the 3,932,068 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.14",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.86",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.47",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.57",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.5% of the total average of 34.5 cycles between issuing two instructions."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.87",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992824",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"42","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197125",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.57",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.57",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.08",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","15.98",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.75",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184373.69",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.31",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.85",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.85",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","816.26",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.46",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.57",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.95",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.47",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.15",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,202 sectors to be read from DRAM, which is 1.3x of the 3,747,044 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.96",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.04",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.29",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.39",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 33.3 cycles between issuing two instructions."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.85",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992814",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"43","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473407 excessive sectors (45% of the total 7634943 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202022",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.21",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.21",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.92",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.53",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.24",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187916.90",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.77",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.40",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.40",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","800.48",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.95",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.21",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.42",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.92",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.47",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,088 sectors to be read from DRAM, which is 1.3x of the 3,525,763 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.41",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.59",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.08",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.17",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.1 cycles between issuing two instructions."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.82",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992802",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"44","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030424 excessive sectors (49% of the total 8191866 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204303",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.23",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.23",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.54",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.10",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.15",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190939.86",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.52",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.03",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.03",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.13",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.23",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.23",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.35",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.66",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.68",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,656 sectors to be read from DRAM, which is 1.3x of the 3,932,053 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.12",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.88",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.51",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.60",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.5 cycles between issuing two instructions."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992779",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"45","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204160",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.28",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.28",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.92",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.89",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.03",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191856.31",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.54",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.92",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.92",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.56",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.37",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.28",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.26",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,650 sectors to be read from DRAM, which is 1.3x of the 3,932,093 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.92",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.08",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.81",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.91",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.8 cycles between issuing two instructions."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.70",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992751",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"46","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197932",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.34",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.34",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.54",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.37",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.51",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184408.95",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.22",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.84",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.84",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","818.52",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.36",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.34",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.05",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.13",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,130 sectors to be read from DRAM, which is 1.3x of the 3,744,729 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.96",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.04",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.30",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.39",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 33.3 cycles between issuing two instructions."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.79",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992790",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"47","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473430 excessive sectors (45% of the total 7634870 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201684",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.05",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.05",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.89",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.41",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.09",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188286.14",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.80",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.35",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.35",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","796.88",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.09",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.05",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.41",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.87",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.46",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 311.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,730 sectors to be read from DRAM, which is 1.3x of the 3,511,836 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.34",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.66",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.19",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.28",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.2 cycles between issuing two instructions."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.53",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992679",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"48","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011167 excessive sectors (49% of the total 8154369 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203082",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.31",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.31",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.87",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.67",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.11",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190583.10",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.65",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.07",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.07",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.21",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.35",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.31",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.15",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.80",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,376 sectors to be read from DRAM, which is 1.3x of the 3,916,170 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.15",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.85",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.47",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.57",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.5 cycles between issuing two instructions."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.66",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992732",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"49","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569184 excessive sectors (52% of the total 8712384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203272",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.23",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.23",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.66",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.67",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.10",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190748.23",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.63",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.05",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.05",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","835.82",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.35",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.23",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.11",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.87",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 336.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,342 sectors to be read from DRAM, which is 1.3x of the 3,913,191 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.96",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.04",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.75",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.85",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.8 cycles between issuing two instructions."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.61",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992712",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"50","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4565152 excessive sectors (52% of the total 8708352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195787",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.70",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.70",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.30",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.15",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.84",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183406.11",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.46",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.97",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.97",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.30",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.26",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.70",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.71",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.67",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,730 sectors to be read from DRAM, which is 1.3x of the 3,731,595 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.88",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.12",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.41",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.51",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.7% of the total average of 33.4 cycles between issuing two instructions."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.71",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992756",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"51","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462247 excessive sectors (46% of the total 7605447 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200624",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.34",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.34",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.67",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.54",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.39",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","186855.49",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.92",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.53",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.53",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.3%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","801.68",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.20",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.34",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.44",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.88",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.49",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 312.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,584 sectors to be read from DRAM, which is 1.3x of the 3,514,558 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.28",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.72",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.27",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.36",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.0% of the total average of 34.3 cycles between issuing two instructions."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.82",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992803",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"52","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011007 excessive sectors (49% of the total 8154113 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202476",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.51",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.51",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.69",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.94",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.34",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190807.04",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.72",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.04",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.04",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","832.16",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.16",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.51",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.27",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.69",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,304 sectors to be read from DRAM, which is 1.3x of the 3,915,985 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.14",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.86",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.47",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.57",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.6% of the total average of 34.5 cycles between issuing two instructions."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.87",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992823",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"53","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202619",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.38",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.38",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.58",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.06",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.28",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190454.67",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.70",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.08",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.08",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","823.52",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.39",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.38",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.22",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.80",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,212 sectors to be read from DRAM, which is 1.3x of the 3,912,957 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.00",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.00",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.69",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.79",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.1% of the total average of 34.7 cycles between issuing two instructions."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992800",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"54","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196148",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.58",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.58",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.24",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.21",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.80",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","182984.47",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.42",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.03",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.03",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","811.61",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.65",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.58",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.12",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.61",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,592 sectors to be read from DRAM, which is 1.3x of the 3,729,237 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.99",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.01",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.25",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.35",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.1% of the total average of 33.3 cycles between issuing two instructions."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.86",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992821",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"55","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462144 excessive sectors (46% of the total 7605248 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","199625",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.62",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.62",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.22",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.39",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.57",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187797.76",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.03",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.41",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.41",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","799.53",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.34",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.62",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.92",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.51",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,598 sectors to be read from DRAM, which is 1.3x of the 3,512,481 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.46",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.54",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.01",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.11",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.0 cycles between issuing two instructions."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992809",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"56","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011008 excessive sectors (49% of the total 8154112 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202353",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.53",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.53",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.06",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.50",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.23",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191744.56",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.73",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.93",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.93",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.55",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.42",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.53",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.05",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.91",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,292 sectors to be read from DRAM, which is 1.3x of the 3,915,150 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.04",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.96",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.63",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.73",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 34.6 cycles between issuing two instructions."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.69",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992748",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"57","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203363",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.19",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.19",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.39",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.75",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.06",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189192.88",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.62",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.24",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.24",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.0%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.58",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.10",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.19",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.04",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.98",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,244 sectors to be read from DRAM, which is 1.3x of the 3,914,153 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.15",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.85",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.46",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.55",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.7% of the total average of 34.5 cycles between issuing two instructions."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992811",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"58","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196936",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.38",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.38",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.25",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","15.83",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.58",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184821.55",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.33",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.79",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.79",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","816.06",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.49",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.38",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.80",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.76",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,596 sectors to be read from DRAM, which is 1.3x of the 3,729,461 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.86",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.14",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.44",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.53",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.4 cycles between issuing two instructions."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992800",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"59","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462143 excessive sectors (46% of the total 7605247 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200142",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.46",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.46",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.77",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.51",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.49",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187611.46",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.97",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.43",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.43",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","801.38",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.10",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.46",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.32",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.86",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.50",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,466 sectors to be read from DRAM, which is 1.3x of the 3,510,430 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.53",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.47",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.90",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.00",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.6% of the total average of 33.9 cycles between issuing two instructions."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.80",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992794",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"60","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4010904 excessive sectors (49% of the total 8153914 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203015",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.33",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.33",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.29",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.23",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.28",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188926.41",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.66",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.27",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.27",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.48",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.07",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.33",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.20",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.87",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,146 sectors to be read from DRAM, which is 1.3x of the 3,915,221 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.23",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.77",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.35",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.44",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.1% of the total average of 34.3 cycles between issuing two instructions."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.76",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992776",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"61","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4568992 excessive sectors (52% of the total 8712000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202918",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.33",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.33",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.99",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.00",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.12",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189884.51",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.67",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.15",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.15",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","821.98",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.93",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.33",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.15",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.73",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,146 sectors to be read from DRAM, which is 1.3x of the 3,913,117 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.09",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.91",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.56",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.66",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.4% of the total average of 34.6 cycles between issuing two instructions."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992798",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"62","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564960 excessive sectors (52% of the total 8707968 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195308",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.84",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.84",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.63",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.50",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.95",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183058.13",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.51",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.02",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.02",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.32",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.37",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.84",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.02",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.63",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,466 sectors to be read from DRAM, which is 1.3x of the 3,728,707 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.24",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.76",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.67",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.67 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","32.91",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.00",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 32.9 cycles between issuing two instructions."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992808",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"63","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462103 excessive sectors (46% of the total 7605111 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195325",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.83",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.83",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","190.59",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.55",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.90",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","182520.80",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.51",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.09",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.09",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.8%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.34",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.36",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.83",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.02",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.62",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,462 sectors to be read from DRAM, which is 1.3x of the 3,728,906 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.89",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.11",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.40",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.49",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 21.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 65.7% of the total average of 33.4 cycles between issuing two instructions."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.72",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992760",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"64","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462103 excessive sectors (46% of the total 7605111 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203679",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.11",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.11",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.13",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.09",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.85",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188860.94",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.59",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.28",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.28",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.54",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.07",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.11",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.15",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.80",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,148 sectors to be read from DRAM, which is 1.3x of the 3,913,249 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.03",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.97",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.64",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.74",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.3% of the total average of 34.6 cycles between issuing two instructions."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.75",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992774",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"65","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564960 excessive sectors (52% of the total 8707968 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202603",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.45",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.45",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.26",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.08",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.30",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190558.79",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.70",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.07",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.07",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.63",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.84",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.45",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.19",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.84",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,166 sectors to be read from DRAM, which is 1.3x of the 3,916,234 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.21",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.79",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.37",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.46",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 34.4 cycles between issuing two instructions."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.71",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992755",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"66","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4568992 excessive sectors (52% of the total 8712000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200842",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.27",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.27",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","195.36",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.47",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.28",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188119.36",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.89",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.37",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.37",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","807.16",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.27",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.32",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","38.00",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,450 sectors to be read from DRAM, which is 1.3x of the 3,510,675 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.36",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.64",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.16",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.25",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.2 cycles between issuing two instructions."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992809",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"67","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4010904 excessive sectors (49% of the total 8153914 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195873",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.70",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.70",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.25",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","15.98",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.83",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183079.55",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.45",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.01",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.01",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","816.12",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.71",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.70",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.81",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,620 sectors to be read from DRAM, which is 1.3x of the 3,730,555 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.00",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.00",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.24",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.33",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 33.2 cycles between issuing two instructions."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992813",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"68","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462143 excessive sectors (46% of the total 7605247 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203207",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.23",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.23",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.14",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.67",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.12",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190040.65",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.64",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.13",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.13",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","829.62",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.19",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.23",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.04",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.93",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,224 sectors to be read from DRAM, which is 1.3x of the 3,913,734 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.17",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.83",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.44",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.54",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.8% of the total average of 34.4 cycles between issuing two instructions."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.80",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992793",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"69","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204070",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.05",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.05",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.17",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.66",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.98",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189892.16",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.55",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.15",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.15",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","830.34",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.20",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.05",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.05",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.75",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.68",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,324 sectors to be read from DRAM, which is 1.3x of the 3,915,772 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.14",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.86",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.48",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.58",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.5 cycles between issuing two instructions."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992813",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"70","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200893",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.25",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.25",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.61",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.36",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.31",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188173.36",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.89",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.36",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.36",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","802.05",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.16",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.25",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.89",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,598 sectors to be read from DRAM, which is 1.3x of the 3,511,648 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.37",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.63",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.15",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.24",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.0% of the total average of 34.1 cycles between issuing two instructions."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992797",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"71","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011008 excessive sectors (49% of the total 8154112 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.11",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.00",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195665",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.73",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.73",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","195.26",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.12",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.89",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184072.11",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.47",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.88",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.88",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","807.43",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.72",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.73",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.11",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.56",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.17",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,596 sectors to be read from DRAM, which is 1.3x of the 3,728,598 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.00",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.00",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.23",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.33",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.2 cycles between issuing two instructions."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.97",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992869",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"72","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462144 excessive sectors (46% of the total 7605248 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201905",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.59",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.59",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.35",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.94",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.40",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191872.83",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.78",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.91",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.91",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.47",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.50",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.59",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.22",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.77",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,190 sectors to be read from DRAM, which is 1.3x of the 3,913,887 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.09",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.91",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.55",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.65",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.7% of the total average of 34.6 cycles between issuing two instructions."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.66",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992733",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"73","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203138",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.29",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.29",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.81",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.81",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.23",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192332.20",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.65",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.86",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.86",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.32",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.16",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.29",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.27",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.72",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,272 sectors to be read from DRAM, which is 1.3x of the 3,916,091 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.12",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.88",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.50",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.60",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.9% of the total average of 34.5 cycles between issuing two instructions."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.88",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992829",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"74","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201048",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.22",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.22",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.05",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.45",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.25",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187840.18",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.87",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.41",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.41",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","796.16",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.03",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.22",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.45",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.85",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 312.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,594 sectors to be read from DRAM, which is 1.3x of the 3,514,093 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.48",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.52",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.98",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.08",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.43",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.0 cycles between issuing two instructions."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.86",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992819",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"75","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011007 excessive sectors (49% of the total 8154113 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196578",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.47",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.47",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.71",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.05",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.68",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184544.05",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.37",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.82",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.82",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.53",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.57",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.47",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.71",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.69",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,724 sectors to be read from DRAM, which is 1.3x of the 3,731,545 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.89",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.11",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.39",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.49",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.4 cycles between issuing two instructions."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.68",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992742",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"76","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3462247 excessive sectors (46% of the total 7605447 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203976",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.03",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.03",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.70",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.81",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.91",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189133.86",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.56",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.25",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.25",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","835.67",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.22",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.03",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.11",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.89",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 336.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,346 sectors to be read from DRAM, which is 1.3x of the 3,913,902 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.94",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.06",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.78",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.88",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.6% of the total average of 34.8 cycles between issuing two instructions."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.61",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992711",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"77","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4565152 excessive sectors (52% of the total 8708352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202905",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.39",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.39",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.53",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.60",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.16",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191344.47",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.67",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.98",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.98",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","833.05",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.55",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.39",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.15",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.79",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,374 sectors to be read from DRAM, which is 1.3x of the 3,915,859 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.17",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.83",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.43",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.53",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.32",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.4 cycles between issuing two instructions."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.70",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992749",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"78","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569184 excessive sectors (52% of the total 8712384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201093",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.22",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.22",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.79",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.44",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.26",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187972.09",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.87",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.39",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.39",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","797.29",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.06",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.22",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.40",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.98",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 311.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,740 sectors to be read from DRAM, which is 1.3x of the 3,511,331 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.28",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.72",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.27",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.37",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.38",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 34.3 cycles between issuing two instructions."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.44",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992638",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"79","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4011167 excessive sectors (49% of the total 8154369 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197808",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.38",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.38",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.70",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.49",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.48",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183067.82",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.23",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.02",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.02",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","817.91",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.39",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.38",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.05",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.59",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.13",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,134 sectors to be read from DRAM, which is 1.3x of the 3,744,746 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.92",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.08",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.36",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.45",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 33.4 cycles between issuing two instructions."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.91",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992843",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"80","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473430 excessive sectors (45% of the total 7634870 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203784",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.37",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.37",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.93",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.81",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.15",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192745.16",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.58",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.81",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.81",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.55",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.33",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.37",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.26",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.71",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,642 sectors to be read from DRAM, which is 1.3x of the 3,932,284 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.02",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.98",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.67",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.76",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.7 cycles between issuing two instructions."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.80",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992793",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"81","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202859",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.64",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.64",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.06",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.16",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.45",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190219.47",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.68",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.11",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.11",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.09",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.40",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.64",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.35",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,650 sectors to be read from DRAM, which is 1.3x of the 3,932,344 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.16",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.84",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.45",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.55",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.3% of the total average of 34.5 cycles between issuing two instructions."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.84",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992811",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"82","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201091",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.45",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.45",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.05",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.54",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.44",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187691.46",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.87",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.42",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.42",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","799.89",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.19",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.45",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.42",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.92",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.49",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,070 sectors to be read from DRAM, which is 1.3x of the 3,526,982 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.43",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.57",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.05",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.15",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.1 cycles between issuing two instructions."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992798",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"83","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030424 excessive sectors (49% of the total 8191866 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197750",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.40",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.40",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","192",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.05",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.53",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183601.39",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.24",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.95",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.95",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.7%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.06",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.38",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.40",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.95",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.56",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.14",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,198 sectors to be read from DRAM, which is 1.3x of the 3,745,760 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.89",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.11",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.39",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.48",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.4 cycles between issuing two instructions."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992796",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"84","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473407 excessive sectors (45% of the total 7634943 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203826",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.36",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.36",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.38",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.71",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.17",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190345.30",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.57",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.10",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.10",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.69",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.01",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.36",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.40",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,784 sectors to be read from DRAM, which is 1.3x of the 3,932,571 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.10",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.90",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.54",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.64",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.6% of the total average of 34.5 cycles between issuing two instructions."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992782",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"85","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203224",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.53",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.53",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.06",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.57",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.24",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191516.41",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.64",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.96",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.96",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.04",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.43",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.53",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.65",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,768 sectors to be read from DRAM, which is 1.3x of the 3,931,791 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.30",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.70",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.24",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.34",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.7% of the total average of 34.2 cycles between issuing two instructions."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.74",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992766",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"86","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201538",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.34",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.34",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.78",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.47",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.32",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188630.95",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.82",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.31",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.31",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","796.97",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.15",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.34",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.64",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.84",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.46",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,190 sectors to be read from DRAM, which is 1.3x of the 3,526,859 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.33",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.67",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.20",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.30",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.3% of the total average of 34.2 cycles between issuing two instructions."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992796",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"87","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197204",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.55",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.55",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.18",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.11",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.73",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185188.55",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.30",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.74",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.74",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","815.91",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.26",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.55",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.17",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.52",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.14",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,196 sectors to be read from DRAM, which is 1.3x of the 3,745,245 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.04",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.96",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.19",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.28",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.0% of the total average of 33.2 cycles between issuing two instructions."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992805",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"88","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204396",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.20",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.20",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.64",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.09",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.01",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191023.61",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.51",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.02",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.02",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.75",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.91",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.20",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.42",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.72",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,778 sectors to be read from DRAM, which is 1.3x of the 3,931,705 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.10",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.90",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.53",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.63",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.9% of the total average of 34.5 cycles between issuing two instructions."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.98",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992871",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"89","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204902",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.05",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.05",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.58",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.94",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.92",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191509.80",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.46",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.96",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.96",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.91",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.96",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.05",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.47",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.60",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.66",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,772 sectors to be read from DRAM, which is 1.3x of the 3,932,398 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.02",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.98",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.66",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.76",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.2% of the total average of 34.7 cycles between issuing two instructions."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992805",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"90","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201035",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.49",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.49",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.52",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.59",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.47",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187716",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.87",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.42",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.42",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","794.11",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.10",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.49",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.62",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.80",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,196 sectors to be read from DRAM, which is 1.3x of the 3,530,396 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.30",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.70",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.24",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.34",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.0% of the total average of 34.2 cycles between issuing two instructions."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.88",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992828",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"91","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","196436",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.78",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.78",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.22",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.09",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.95",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183944.96",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.38",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.90",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.90",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","819.96",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.53",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.78",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.86",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.63",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.17",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 293.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,202 sectors to be read from DRAM, which is 1.3x of the 3,748,475 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.95",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.05",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.31",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.41",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.8% of the total average of 33.3 cycles between issuing two instructions."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.44",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992637",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"92","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202571",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.72",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.72",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.77",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.90",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.66",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188892.34",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.71",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.27",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.27",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","827.31",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.51",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.72",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.31",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.73",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,788 sectors to be read from DRAM, which is 1.3x of the 3,931,494 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.07",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.93",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.59",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.69",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.1% of the total average of 34.6 cycles between issuing two instructions."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.67",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992738",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"93","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204269",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.24",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.24",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.45",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.79",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.13",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189819.01",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.53",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.16",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.16",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","828.64",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.13",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.24",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.40",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.57",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.67",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,784 sectors to be read from DRAM, which is 1.3x of the 3,931,919 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.04",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.96",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.63",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.73",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.0% of the total average of 34.6 cycles between issuing two instructions."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.58",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992698",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"94","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201166",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.44",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.44",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.53",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.55",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.48",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187347.51",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.86",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.47",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.47",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","797.98",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.77",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.44",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.60",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.82",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,206 sectors to be read from DRAM, which is 1.3x of the 3,527,284 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.41",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.59",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.08",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.18",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.4% of the total average of 34.1 cycles between issuing two instructions."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.57",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992693",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"95","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197004",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.60",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.60",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.08",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.33",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.71",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184377.24",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.32",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.85",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.85",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","816.21",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.60",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.60",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.89",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.75",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,212 sectors to be read from DRAM, which is 1.3x of the 3,744,749 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.90",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.10",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.38",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.47",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.7% of the total average of 33.4 cycles between issuing two instructions."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.77",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992781",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"96","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203132",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.56",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.56",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.82",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.86",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.32",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192088.03",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.65",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.89",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.89",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.87",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.43",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.56",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.06",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.74",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.74",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,792 sectors to be read from DRAM, which is 1.3x of the 3,931,883 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.91",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.09",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.82",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.92",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.6% of the total average of 34.8 cycles between issuing two instructions."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.79",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992790",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"97","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204537",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.18",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.18",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.65",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.95",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.04",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192635.10",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.50",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.82",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.82",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","831.85",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.39",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.18",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.10",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.88",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,770 sectors to be read from DRAM, which is 1.3x of the 3,932,652 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.03",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.97",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.65",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.74",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.7 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.5% of the total average of 34.6 cycles between issuing two instructions."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.80",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992793",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"98","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201834",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.27",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.27",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.22",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.32",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.26",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189345.52",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.22",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.22",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.0%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","803.30",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.53",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.27",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.31",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.99",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.48",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,204 sectors to be read from DRAM, which is 1.3x of the 3,526,889 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.42",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.58",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.07",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.16",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.8% of the total average of 34.1 cycles between issuing two instructions."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.68",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992741",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"99","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","199031",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.03",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.03",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","195.36",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.03",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.25",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185701.07",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.09",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.68",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.68",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.4%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","810.71",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.19",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.03",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.80",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.12",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,200 sectors to be read from DRAM, which is 1.3x of the 3,745,588 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.88",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.12",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.42",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.51",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 33.4 cycles between issuing two instructions."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.75",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992771",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"100","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","205012",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.04",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.04",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.16",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.59",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.89",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191786.12",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.45",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.92",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.92",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","829.86",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.04",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.04",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.08",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.81",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,794 sectors to be read from DRAM, which is 1.3x of the 3,931,497 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.86",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.14",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.90",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","35.00",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.6% of the total average of 34.9 cycles between issuing two instructions."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.68",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992743",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"101","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.03",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","205905",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.77",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.77",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.62",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.71",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191007.85",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.35",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.85",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.02",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.02",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","830.24",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.97",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.77",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.11",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.86",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.64",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,796 sectors to be read from DRAM, which is 1.3x of the 3,932,513 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.98",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.02",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.72",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.81",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.8% of the total average of 34.7 cycles between issuing two instructions."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.74",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992768",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"102","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202468",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.09",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.09",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.75",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.65",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.14",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187365.55",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.72",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.46",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.46",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","797.02",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.88",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.09",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.26",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.92",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.45",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 314.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,194 sectors to be read from DRAM, which is 1.3x of the 3,526,978 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.24",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.76",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.33",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.43",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.1% of the total average of 34.3 cycles between issuing two instructions."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992797",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"103","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030464 excessive sectors (49% of the total 8192000 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198144",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.28",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.28",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.95",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.30",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.47",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184885.06",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.19",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.78",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.78",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","816.77",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.28",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.28",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.09",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.62",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.12",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,210 sectors to be read from DRAM, which is 1.3x of the 3,744,959 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.82",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.18",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.50",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.59",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.9% of the total average of 33.5 cycles between issuing two instructions."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.73",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992765",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"104","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473408 excessive sectors (45% of the total 7634944 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204383",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.21",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.21",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.34",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.97",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.05",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192314.31",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.51",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.86",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.86",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","824.89",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.33",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.21",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.14",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.80",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,780 sectors to be read from DRAM, which is 1.3x of the 3,932,972 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.06",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.94",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.60",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.70",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 24.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 69.2% of the total average of 34.6 cycles between issuing two instructions."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.75",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992771",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"105","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204559",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.14",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.14",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.80",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.84",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.06",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192550.87",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.50",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.83",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.83",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.98",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.32",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.14",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.25",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.80",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.68",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,792 sectors to be read from DRAM, which is 1.3x of the 3,931,830 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","22.92",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","77.08",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.82",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.91",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.3% of the total average of 34.8 cycles between issuing two instructions."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939904",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.81",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992799",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409024",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.70",
"106","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587520 excessive sectors (52% of the total 8749056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203520",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","54.80",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","54.80",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.10",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.69",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","47.81",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187644",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.61",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.43",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.43",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","795.66",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.10",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","54.80",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.22",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.96",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.43",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,216 sectors to be read from DRAM, which is 1.3x of the 3,529,488 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.36",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.64",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.15",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.25",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.45",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.2 cycles between issuing two instructions."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.37",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939905",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.83",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992805",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409025",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.71",
"107","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030463 excessive sectors (49% of the total 8191999 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197736",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.39",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.39",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.40",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","15.98",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.57",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184716.71",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.24",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.80",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.80",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.71",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.64",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.39",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.62",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.75",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.16",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 293.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,090 sectors to be read from DRAM, which is 1.3x of the 3,747,261 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.17",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.83",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.01",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.10",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.4 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.7% of the total average of 33.0 cycles between issuing two instructions."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.64",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992725",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"108","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3473368 excessive sectors (45% of the total 7634810 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","203125",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.56",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.56",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","201.02",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.55",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.51",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","192908.69",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.65",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.91",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","22.79",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.91",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","22.79",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.33",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.50",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.56",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","45.97",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","36.01",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,696 sectors to be read from DRAM, which is 1.3x of the 3,931,264 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.03",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.97",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.63",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.63 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.65",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.74",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.8% of the total average of 34.6 cycles between issuing two instructions."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.51",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992667",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"109","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","204134",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.28",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.28",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","200.86",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.68",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.10",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","191061.13",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.54",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.86",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.01",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.01",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.71",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.33",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.28",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.07",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.88",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.69",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,980,634 sectors to be read from DRAM, which is 1.3x of the 3,932,323 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.22",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.78",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.37",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.46",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.6% of the total average of 34.4 cycles between issuing two instructions."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.64",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992724",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"110","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4587488 excessive sectors (52% of the total 8748928 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201565",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.34",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.34",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.59",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.50",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.25",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187147.01",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.82",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.49",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.49",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.3%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","797.68",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.34",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.37",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.96",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.49",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,743,120 sectors to be read from DRAM, which is 1.3x of the 3,527,331 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.34",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.66",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.19",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.28",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.15",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.39",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 34.2 cycles between issuing two instructions."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43842.39",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18939912",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43964.58",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18992698",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 491520 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409032",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.31",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","151.72",
"111","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4030486 excessive sectors (49% of the total 8191926 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","194581",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.08",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.08",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.71",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.56",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.12",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181593.06",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.59",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.97",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.20",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.97",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.20",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.9%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","822.69",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.41",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.08",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.01",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.51",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.19",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,726 sectors to be read from DRAM, which is 1.3x of the 3,729,811 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.02",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.98",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.21",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.31",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.2% of the total average of 33.2 cycles between issuing two instructions."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.86",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984181",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"112","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3454111 excessive sectors (45% of the total 7597313 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201689",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.72",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.72",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.92",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.09",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.57",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188803.87",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.28",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.28",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","835.54",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.97",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.72",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.30",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.75",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 338.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,356 sectors to be read from DRAM, which is 1.3x of the 3,915,903 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.32",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.68",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.21",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.30",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 68.0% of the total average of 34.2 cycles between issuing two instructions."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43945.01",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984246",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"113","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569184 excessive sectors (52% of the total 8712384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202170",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.56",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.56",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.70",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.17",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.42",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","189371.26",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.74",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.21",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.21",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.0%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","835.96",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.56",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.39",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.72",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,324 sectors to be read from DRAM, which is 1.3x of the 3,912,335 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.31",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.69",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.23",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.32",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.7% of the total average of 34.2 cycles between issuing two instructions."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.82",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984164",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"114","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4565152 excessive sectors (52% of the total 8708352 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198484",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","55.94",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","55.94",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","195.10",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.76",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.89",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184803.91",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.15",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.78",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.78",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","808.49",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.11",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","55.94",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.44",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.90",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.55",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 313.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,726 sectors to be read from DRAM, which is 1.3x of the 3,510,758 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.49",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.51",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.96",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.06",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.33",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.6% of the total average of 34.0 cycles between issuing two instructions."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.39",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931272",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.82",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984164",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490504 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"115","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019303 excessive sectors (49% of the total 8162503 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195663",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.75",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.75",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.46",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.10",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.89",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","182508.27",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.46",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.08",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.08",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.8%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","823.75",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.51",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.75",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.88",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.70",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.18",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,606 sectors to be read from DRAM, which is 1.3x of the 3,729,417 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.98",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.02",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.27",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.36",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 21.8 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 65.5% of the total average of 33.3 cycles between issuing two instructions."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.72",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984117",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"116","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453951 excessive sectors (45% of the total 7597057 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200936",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.96",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.96",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.27",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.90",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.80",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187551.56",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.87",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.43",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.43",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","834.21",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.08",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.96",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.32",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.66",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.76",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,298 sectors to be read from DRAM, which is 1.3x of the 3,915,385 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.48",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.52",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.98",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.08",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.6 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.5% of the total average of 34.0 cycles between issuing two instructions."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.59",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984063",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"117","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.14",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201666",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.67",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.67",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.15",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.80",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.50",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188262.04",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.79",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.34",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.34",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","838.12",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.96",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.67",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.64",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.73",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,192 sectors to be read from DRAM, which is 1.3x of the 3,911,388 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.39",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.61",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.11",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.20",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 34.1 cycles between issuing two instructions."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.71",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984114",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"118","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197618",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.21",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.21",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.02",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.86",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.19",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","183774.39",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.24",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.91",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.91",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","813.03",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.84",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.21",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.66",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.88",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.56",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,588 sectors to be read from DRAM, which is 1.3x of the 3,510,208 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.84",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.16",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.46",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.56",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.5% of the total average of 33.5 cycles between issuing two instructions."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.72",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984118",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"119","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019200 excessive sectors (49% of the total 8162304 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","195283",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.85",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.85",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.14",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.35",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.02",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","181817.52",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.51",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.17",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.97",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.17",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.8%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.03",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.21",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.85",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","42.11",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.44",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.17",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,608 sectors to be read from DRAM, which is 1.3x of the 3,729,831 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.15",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.85",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.04",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.13",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.5% of the total average of 33.0 cycles between issuing two instructions."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.72",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984117",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"120","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453952 excessive sectors (45% of the total 7597056 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200276",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","58.13",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","58.13",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","196.58",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.29",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.90",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188108.60",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.95",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.36",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.36",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","841.24",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.34",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","58.13",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.36",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.75",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.79",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,310 sectors to be read from DRAM, which is 1.3x of the 3,915,679 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.43",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.57",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.05",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.14",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.0 cycles between issuing two instructions."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.66",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984095",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"121","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4569088 excessive sectors (52% of the total 8712192 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","201579",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.72",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.72",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","197.98",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.26",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.60",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","187245.76",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.80",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.94",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.47",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.94",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.47",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.2%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","834.52",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.28",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.72",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.43",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.60",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.74",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.6 sectors per request, or 10.6*32 = 337.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,186 sectors to be read from DRAM, which is 1.3x of the 3,911,403 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.31",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.69",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.22",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.32",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.28",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.4% of the total average of 34.2 cycles between issuing two instructions."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.54",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984041",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"122","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564992 excessive sectors (52% of the total 8708096 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","198291",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.00",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.00",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","194.85",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.85",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","48.93",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","184286.71",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.16",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.88",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.85",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.85",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.6%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","809.42",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.97",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.00",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.67",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.90",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.55",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.7 sectors per request, or 9.7*32 = 311.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,604 sectors to be read from DRAM, which is 1.3x of the 3,509,799 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.82",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.18",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.66",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.66 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.49",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.58",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.5 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 33.5 cycles between issuing two instructions."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.22",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931200",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.69",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984104",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490496 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409536",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.89",
"123","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019199 excessive sectors (49% of the total 8162303 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","194449",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.11",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.11",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","191.04",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.19",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.16",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","182285.27",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.60",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.96",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.90",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","24.11",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.96",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","24.11",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.8%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","825.56",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.69",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.11",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","41.76",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.76",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.21",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,464 sectors to be read from DRAM, which is 1.3x of the 3,728,489 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","24.19",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","75.81",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.67",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.1 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.67 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","32.98",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.07",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.0 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.8% of the total average of 33.0 cycles between issuing two instructions."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.41",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18983986",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"124","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 3453855 excessive sectors (45% of the total 7596865 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","200719",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","58.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","58.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","198.91",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.65",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.87",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","190995.77",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.90",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.92",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.92",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","WRN","All compute pipelines are under-utilized. Either this kernel is very small or it doesn't issue enough warps per scheduler. Check the Launch Statistics and Scheduler Statistics sections for further details."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","831.45",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.94",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","58.01",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.27",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.85",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.78",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 336.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,960,194 sectors to be read from DRAM, which is 1.3x of the 3,915,562 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.44",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.56",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.04",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.14",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.9 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.2% of the total average of 34.0 cycles between issuing two instructions."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.45",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18984003",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.86",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"125","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4568928 excessive sectors (52% of the total 8711936 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.12",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.01",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","202479",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","57.45",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","57.45",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","199.81",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","16.86",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.29",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","188286.57",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","21.71",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.93",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.87",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.34",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.93",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.34",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","826.96",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","28.98",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","57.45",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.38",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","35.76",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.70",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 10.5 sectors per request, or 10.5*32 = 337.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,956,126 sectors to be read from DRAM, which is 1.3x of the 3,911,694 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.22",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.23",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.78",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.64",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.3 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.64 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","34.37",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","34.46",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 23.2 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 67.5% of the total average of 34.4 cycles between issuing two instructions."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.35",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18983958",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"126","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4564896 excessive sectors (52% of the total 8707904 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","1.13",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.02",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","197211",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Memory Throughput","%","56.29",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","DRAM Throughput","%","56.29",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Duration","usecond","193.54",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","17.70",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","L2 Cache Throughput","%","49.14",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","SM Active Cycles","cycle","185034.76",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","22.28",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 2:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Active","inst/cycle","0.95",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.89",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issue Slots Busy","%","23.75",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","Issued Ipc Active","inst/cycle","0.95",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Compute Workload Analysis","SM Busy","%","23.75",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (20.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Memory Throughput","Gbyte/second","814.99",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Busy","%","29.13",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Max Bandwidth","%","56.29",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L1/TEX Hit Rate","%","46.62",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Compression Ratio","","0",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","L2 Hit Rate","%","37.85",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Memory Workload Analysis","Mem Pipes Busy","%","5.58",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.8 sectors per request, or 9.8*32 = 312.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from device memory causes 4,722,452 sectors to be read from DRAM, which is 1.3x of the 3,518,867 sectors causing a miss in the L2 cache. The DRAM fetch granularity for read misses in L2 is 64 bytes, i.e. the lower or upper half of an L2 cache line. Try changing your access pattern to make use of both sectors returned by a DRAM read request for optimal usage of the DRAM throughput. For strided memory reads, avoid strides of 64 bytes or larger to avoid moving unused sectors from DRAM to L2. "
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","One or More Eligible","%","23.83",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Issued Warp Per Scheduler","","0.24",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","No Eligible","%","76.17",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.65",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 4.2 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 16 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.65 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 16. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","33.48",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","33.57",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Active Threads Per Warp","","30.14",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.17",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 22.3 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture) operation. Find the instruction producing the data being waited upon to identify the culprit. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality (coalescing), or by changing the cache configuration. Consider moving frequently used data to shared memory.. This stall type represents about 66.5% of the total average of 33.5 cycles between issuing two instructions."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","WarpStateStats","","","","CPIStall","INF","Check the Warp Stall Sampling (All Cycles) table for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-reference) provides more details on each stall reason."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","43822.02",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Executed Instructions","inst","18931112",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","43944.42",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Instruction Statistics","Issued Instructions","inst","18983988",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","InstructionStats","","","","FPInstructions","WRN","This kernel executes 490488 fused and 131072 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 11% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Block Size","","1024",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Grid Size","","1024",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Registers Per Thread","register/thread","52",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Threads","thread","1048576",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Launch Statistics","Waves Per SM","","9.48",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit SM","block","32",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Registers","block","1",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Shared Mem","block","8",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Block Limit Warps","block","2",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Active Warps per SM","warp","32",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Theoretical Occupancy","%","50",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Occupancy","%","49.85",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","Achieved Active Warps Per SM","warp","31.91",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (50.0%) is limited by the number of required registers. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions Ratio","%","0.07",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Instructions","inst","1409528",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Branch Efficiency","%","92.25",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","Source Counters","Avg. Divergent Branches","","152.87",
"127","3209537","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(1024, 1, 1)","0","8.0","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 4019031 excessive sectors (49% of the total 8162039 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
