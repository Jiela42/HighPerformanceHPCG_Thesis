Striped Box coloring (coloringBox 3x3x3),RTX3090,32x32x32,SymGS
"ID","Process ID","Process Name","Host Name","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description"
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'972",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.73",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.73",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.92",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.56",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.49",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'155",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.62",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.44",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.4%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","43.25",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.49",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.73",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","48.10",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.04",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 279.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.78",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.22",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.47",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.47 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.89",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.22",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.28",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.78",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.17",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'376",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","318.98",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'627",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2140 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.37",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.94",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'398",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.10",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"0","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16101 excessive sectors (44% of the total 36682 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.46",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'981",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.73",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.73",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.52",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.50",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'155.37",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.61",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.42",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.4%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.94",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.50",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.73",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.75",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.18",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.74",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.26",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.51",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.51 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.06",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.39",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.28",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.78",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.17",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'375",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","318.98",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'626",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2140 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.67",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.08",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'397",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.12",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"1","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16088 excessive sectors (44% of the total 36669 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.34",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'916",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.58",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.58",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","22.16",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.44",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'048.56",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.64",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.85",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.58",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.06",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.44",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.58",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.78",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.57",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 290.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.91",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.09",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.61",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.61 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.32",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.65",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.82",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.73",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'982",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.48",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'214",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1949 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.71",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.58",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'871",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.24",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.97",
"2","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15785 excessive sectors (46% of the total 34497 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.53",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'979",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.73",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.73",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.92",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.43",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.52",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'168",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.08",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.32",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.09",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.96",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","43.29",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.52",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.73",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.86",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.27",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.54",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.46",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.48",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.48 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.18",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.51",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.26",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'405",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.09",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'661",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2143 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.20",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.86",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'399",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"3","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16136 excessive sectors (44% of the total 36735 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.58",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'046",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.71",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.71",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.89",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.53",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.50",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'159.46",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.88",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.52",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.31",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","43.35",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.50",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.71",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.53",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.28",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.54",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.46",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.50",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.50 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.24",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.56",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.89",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.26",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'405",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.07",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'656",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2143 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.48",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.99",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'399",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"4","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16122 excessive sectors (44% of the total 36719 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.42",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'924",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.57",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.57",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","22.04",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.42",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'049.90",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.64",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.82",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.56",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.35",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.42",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.57",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","46.06",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.25",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.82",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.18",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.64",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.64 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.52",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.86",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.79",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'002",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.54",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'234",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1951 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.15",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.79",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"5","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15818 excessive sectors (46% of the total 34544 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.53",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'043",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.36",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.36",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.95",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.64",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.30",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'047.98",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.87",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.63",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.89",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.30",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.36",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.53",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.18",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.86",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.14",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.72",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.72 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.75",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.09",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.01",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.76",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'993",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.53",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'230",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1950 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.10",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.77",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"6","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14671 excessive sectors (44% of the total 33397 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.62",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.38",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'993",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.38",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.38",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.76",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.53",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.29",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'048.33",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.63",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.86",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.61",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","40.40",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.29",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.38",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.40",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.62",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.98",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.02",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.69",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.69 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.55",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.88",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.76",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'993",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.52",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'225",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1950 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.09",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.76",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"7","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14652 excessive sectors (44% of the total 33378 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.30",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.33",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'686",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.27",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.27",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.48",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.28",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","995.07",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.43",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.85",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","45.53",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (45.5%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.12",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.28",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.27",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.20",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.87",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.86",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.88",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.12",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.45",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.45 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","25.79",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.13",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.42",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.05",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","283.36",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","92'943",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.07",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'160",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1770 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.89",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.71",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'381",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.35",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.89",
"8","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14370 excessive sectors (46% of the total 31388 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.48",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'238",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.68",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.68",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.94",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.48",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'199.12",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.88",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.05",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.67",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.07",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.20",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.57",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.48",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.68",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.79",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.72",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 279.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.73",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.27",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.46",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.46 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.89",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.23",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'656",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.84",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'908",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.40",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.95",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'383",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.44",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"9","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16128 excessive sectors (44% of the total 36729 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'196",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.68",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.68",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.93",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.47",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'195.83",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.06",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.75",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.07",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.32",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.79",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.47",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.68",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.74",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.84",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.81",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.19",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.50",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.50 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.98",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.32",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.88",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'656",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.86",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'913",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.39",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.95",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'383",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.44",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"10","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16135 excessive sectors (44% of the total 36732 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'328",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.49",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.49",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.47",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.38",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'081.24",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.61",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.04",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.12",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.63",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.04",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.38",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.49",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.93",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.63",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.09",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.91",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.65",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.65 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.22",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.57",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.34",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.47",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'226",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.23",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'459",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.54",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.50",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'858",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.56",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"11","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15816 excessive sectors (46% of the total 34544 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.44",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'218",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.67",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.67",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.06",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.49",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'190.33",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.88",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.06",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.87",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.07",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.54",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.5%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.34",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.49",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.67",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.77",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.75",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.95",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.05",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.52",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.52 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.89",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.23",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.00",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'655",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.85",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'912",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.60",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.05",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'382",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.46",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"12","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16108 excessive sectors (44% of the total 36689 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.48",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'182",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.69",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.69",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.99",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.47",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'189.72",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.06",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.88",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.08",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.56",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.66",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.47",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.69",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.89",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.89",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.79",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.21",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.43",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.43 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.72",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.05",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'654",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.84",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'906",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.56",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.03",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'381",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.48",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"13","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16109 excessive sectors (44% of the total 36688 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'315",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.47",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.47",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.49",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.39",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'082.94",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.61",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.00",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.12",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.56",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","40.86",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.39",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.47",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.76",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.78",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.15",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.85",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.66",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.66 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.19",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.53",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.00",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.70",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.58",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"14","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15795 excessive sectors (46% of the total 34505 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.49",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'285",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.30",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.30",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.17",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.27",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'077.77",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.13",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.78",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.21",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.27",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.30",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.73",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.84",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.32",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.68",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.74",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.74 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.33",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.68",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.07",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.85",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.65",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"15","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14658 excessive sectors (44% of the total 33384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.40",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'299",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.30",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.30",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.34",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.17",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.28",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'075.18",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.61",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.20",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.89",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.79",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.28",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.30",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","46.91",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.24",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.37",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.63",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.71",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.71 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.16",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.50",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.01",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.99",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.71",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"16","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14659 excessive sectors (44% of the total 33385 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.57",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'412",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.10",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.10",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.71",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.20",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'035.93",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.36",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.77",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.19",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","37.71",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.20",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.10",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.05",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.19",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.82",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.81",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.19",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.37",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.37 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.51",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.86",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.11",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.49",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.52",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"17","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14370 excessive sectors (46% of the total 31388 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'220",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.37",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.37",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.24",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.61",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.32",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'076.38",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.17",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.84",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.56",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.32",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.37",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.98",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.12",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 282.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.25",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.75",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.67",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.67 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.15",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.49",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.10",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.10",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.77",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"18","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15037 excessive sectors (44% of the total 34257 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'246",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.37",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.37",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.68",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.31",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'071.56",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.12",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.30",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.05",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.1%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.92",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.31",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.37",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.84",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.93",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.92",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 283.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.31",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.69",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.73",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.73 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.32",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.66",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.03",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.12",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.78",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"19","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15025 excessive sectors (44% of the total 34245 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.57",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'321",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.19",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.19",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.17",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.24",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'033.15",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.37",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.85",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.31",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.50",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.24",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.19",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.50",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.42",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 295.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.84",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.16",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.36",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.36 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.45",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.80",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.13",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.74",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'379",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.74",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.64",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"20","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14740 excessive sectors (46% of the total 32208 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'154",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.38",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.38",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.73",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.33",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'072.29",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.63",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.12",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.28",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.02",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.97",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.33",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.38",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","48.08",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.53",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.40",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.60",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.76",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.76 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.32",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.66",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.16",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.34",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.88",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"21","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15037 excessive sectors (44% of the total 34257 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.39",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'202",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.38",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.38",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.57",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.32",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'076.99",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.63",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.15",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.82",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.45",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.32",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.38",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.51",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.32",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 283.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.32",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.68",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.71",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.82",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.71 active warps per scheduler, but only an average of 0.82 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.22",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.56",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.10",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.01",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.73",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"22","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15025 excessive sectors (44% of the total 34245 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.42",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'247",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.05",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.27",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'035.55",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.38",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.79",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","37.96",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.27",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.34",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.11",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 294.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.80",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.37",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.37 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.50",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.85",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.20",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.60",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.57",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"23","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14740 excessive sectors (46% of the total 32208 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.45",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'239",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.03",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.03",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.47",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.13",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'035.20",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.38",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.80",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.22",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","36.59",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.13",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.03",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.49",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.38",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.93",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.07",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.39",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.39 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.44",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.79",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.27",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.74",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'379",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.12",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.34",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"24","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13661 excessive sectors (44% of the total 31129 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.45",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'163",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.05",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.05",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.42",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.14",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'034.39",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.39",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.82",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.25",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","36.75",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.14",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.05",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.12",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.08",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 283.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.81",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.19",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.36",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.36 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.46",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.81",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.20",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.27",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.41",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"25","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13664 excessive sectors (44% of the total 31132 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.41",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'262",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","3.87",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","3.87",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.30",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.74",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.08",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","923.80",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.15",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.17",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","29.59",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.18",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.88",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","34.91",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.08",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","3.87",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","44.70",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.58",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.76",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.3 sectors per request, or 9.3*32 = 296.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.68",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.30",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","70.32",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.80",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.87",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.80 active warps per scheduler, but only an average of 0.87 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.28",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.64",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","269.66",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","88'450",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","273.31",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","89'647",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1625 fused and 500 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","65.11",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.25",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","5'911",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.89",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.76",
"26","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13400 excessive sectors (46% of the total 29275 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'355",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","3.85",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","3.85",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.79",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.08",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","921.94",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.14",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.17",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","29.65",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.19",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.97",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (45.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","35.15",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.08",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","3.85",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","44.76",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.44",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.76",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 296.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.58",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.30",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","70.42",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.76",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.86",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.76 active warps per scheduler, but only an average of 0.86 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.22",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.58",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.56",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","269.66",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","88'450",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","273.31",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","89'647",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1625 fused and 500 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","65.27",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.33",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","5'911",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.89",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.76",
"27","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13400 excessive sectors (46% of the total 29275 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.56",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'276",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.03",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.03",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.48",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.13",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'032.94",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.38",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.86",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.32",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","36.94",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.13",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.03",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.00",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.38",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 284.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.99",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.01",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.38",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.38 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.36",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.70",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.20",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.34",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.44",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"28","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13664 excessive sectors (44% of the total 31132 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.44",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'115",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.05",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.05",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.44",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.16",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'035.56",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.40",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.79",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.20",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","36.74",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.16",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.05",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.49",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.33",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.85",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.89",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.11",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.42",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.42 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.59",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.94",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.27",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.74",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'379",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.46",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.50",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"29","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 13661 excessive sectors (44% of the total 31129 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.48",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'130",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.23",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.23",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.15",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.27",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'034.98",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.39",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.80",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.23",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.49",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.27",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.23",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.41",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.44",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 294.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.97",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.03",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.44",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.44 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.58",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.93",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.20",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.47",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.51",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"30","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14740 excessive sectors (46% of the total 32208 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.44",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'245",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.36",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.36",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.24",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.64",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.32",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'073.78",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.12",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.24",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.96",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.55",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.32",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.36",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.53",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.41",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.92",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 284.0 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.25",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.75",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.70",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.70 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.26",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.60",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.10",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.20",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.81",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"31","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15025 excessive sectors (44% of the total 34245 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.58",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'370",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.34",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.34",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.67",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.28",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'075.18",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.60",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.20",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.89",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.92",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.28",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.34",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.94",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.51",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.92",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.95",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.05",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.59",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.59 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.14",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.48",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.16",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.89",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.67",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"32","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15037 excessive sectors (44% of the total 34257 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.48",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'178",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.22",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.22",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.16",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.26",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'030.70",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.39",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.92",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.12",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","44.41",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (44.4%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.41",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.26",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.22",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.58",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.13",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.84",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.2 sectors per request, or 9.2*32 = 294.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.81",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.19",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.40",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.79",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.40 active warps per scheduler, but only an average of 0.79 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.59",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.94",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.13",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.74",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'379",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.90",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.71",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"33","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14740 excessive sectors (46% of the total 32208 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'164",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.38",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.38",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.61",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.32",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'075.38",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.63",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.20",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.89",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.99",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.32",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.38",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.77",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.05",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.9 sectors per request, or 8.9*32 = 283.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.27",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.73",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.72",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.72 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.31",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.65",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.03",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.03",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.73",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"34","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15025 excessive sectors (44% of the total 34245 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'218",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.37",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.37",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.62",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.31",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'073.67",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.12",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.24",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.96",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.90",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.31",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.37",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.90",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.04",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.16",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.84",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.66",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.66 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.19",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.53",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.10",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.35",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.89",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"35","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15037 excessive sectors (44% of the total 34257 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'290",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.13",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.13",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.56",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.22",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'044.70",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.37",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.54",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","43.82",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (43.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","37.43",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.22",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.13",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.08",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.25",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.83",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 292.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.91",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.09",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.42",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.42 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.60",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.95",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.44",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.11",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","284.01",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","93'156",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.73",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'375",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1794 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.13",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.34",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'366",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.74",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.84",
"36","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14370 excessive sectors (46% of the total 31388 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.57",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'212",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.32",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.32",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.18",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.29",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'075.82",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.18",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.87",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.69",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.29",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.32",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","46.90",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.26",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.92",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.25",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.75",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.69",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.69 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.22",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.56",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.01",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.77",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.61",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"37","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14659 excessive sectors (44% of the total 33385 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.41",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'272",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.30",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.30",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.30",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.18",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.27",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'077.74",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.13",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.13",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.78",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.86",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.27",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.30",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.58",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.98",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 277.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.11",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.89",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.72",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.72 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.47",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.81",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.07",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.22",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'457",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.11",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.77",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"38","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14658 excessive sectors (44% of the total 33384 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'372",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.46",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.46",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.64",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.38",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'078.54",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.60",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.11",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.12",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.75",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","40.77",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.38",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.46",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.70",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","17.08",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.1 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.04",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.96",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.66",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.66 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.34",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.68",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.35",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.00",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.46",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'224",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.21",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'454",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.27",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.85",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'856",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.61",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"39","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15795 excessive sectors (46% of the total 34505 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'171",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.69",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.69",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.06",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.78",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'186.45",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.07",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.96",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.08",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.69",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.49",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.78",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.69",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.80",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","14.19",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.94",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.06",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.48",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.48 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.78",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.12",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'654",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.84",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'906",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.51",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.00",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'381",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.48",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"40","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16109 excessive sectors (44% of the total 36688 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.47",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'179",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.68",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.68",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.14",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.49",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'186.12",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.07",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.97",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.08",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.70",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.53",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.49",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.68",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.59",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.56",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.86",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.14",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.43",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.43 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.67",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.01",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.00",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'655",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.85",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'912",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.50",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.00",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'382",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.46",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"41","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16108 excessive sectors (44% of the total 36689 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'272",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.49",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.49",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.55",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.53",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'079.68",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.62",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.11",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.08",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.12",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.70",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","40.96",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.53",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.49",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.97",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.12",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.91",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.33",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.67",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.69",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.69 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.16",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.50",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.34",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","299.47",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'226",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","303.23",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'459",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1976 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.92",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.68",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'858",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.56",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.93",
"42","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15816 excessive sectors (46% of the total 34544 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.56",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'340",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.65",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.65",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.11",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.00",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.46",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'191.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.86",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.06",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.85",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.51",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.5%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.69",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.46",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.65",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.90",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.80",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.00",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 281.2 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.79",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.21",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.46",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.46 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.84",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.17",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.88",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'656",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.86",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'913",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.65",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'383",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.44",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"43","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16135 excessive sectors (44% of the total 36732 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.56",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'393",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.64",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.64",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.14",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.87",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.46",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'202.50",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.86",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.05",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","26.60",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.06",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","46.07",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (46.1%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.56",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.46",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.64",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.66",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.62",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.00",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","26.82",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","73.18",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.53",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.76",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.53 active warps per scheduler, but only an average of 0.76 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.08",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.42",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.30",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.94",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","316.02",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'656",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.84",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'908",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2171 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.21",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.86",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'383",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.44",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.02",
"44","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16128 excessive sectors (44% of the total 36729 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.48",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'906",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.22",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.22",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.92",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.32",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.25",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'001.55",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.40",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.66",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","45.24",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (45.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","38.38",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.25",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.22",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.16",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.78",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.85",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 291.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.81",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.19",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.40",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.40 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","25.69",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.03",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.42",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.05",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","283.36",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","92'943",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","287.07",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","94'160",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1770 fused and 552 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","61.19",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.37",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'381",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.35",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.89",
"45","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14370 excessive sectors (46% of the total 31388 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'852",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.40",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.40",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.95",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.62",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.31",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'045.49",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.65",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.94",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.16",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.74",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.86",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.31",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.40",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.44",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.41",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.94",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.5 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.00",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.00",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.67",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.67 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.45",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.78",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.76",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'993",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.52",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'225",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1950 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.02",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.73",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"46","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14652 excessive sectors (44% of the total 33378 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'942",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.38",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.38",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.66",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.32",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'047.87",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.64",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.87",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.63",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.6%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","39.66",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.32",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.38",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.50",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.37",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.05",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","70.95",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.78",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.78 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.79",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.12",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.01",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.76",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'993",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.53",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'230",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1950 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.78",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.62",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"47","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 14671 excessive sectors (44% of the total 33397 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'917",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.57",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.57",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.89",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","22.05",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.43",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'050.90",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.64",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.14",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.79",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.51",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.5%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.73",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.43",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.57",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","46.12",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.38",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.93",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 290.9 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.01",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","70.99",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.71",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.71 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.57",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.90",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.79",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","98'002",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.54",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'234",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1951 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","63.73",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.59",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'872",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.22",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.98",
"48","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15818 excessive sectors (46% of the total 34544 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.56",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.37",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'097",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.70",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.70",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.95",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.56",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.49",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'158.12",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.87",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.55",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.36",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.4%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","43.16",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.49",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.70",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.44",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.54",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.6 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.67",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.33",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.49",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.49 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.09",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.41",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.89",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.26",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'405",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.07",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'656",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2143 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.71",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.10",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'399",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"49","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16122 excessive sectors (44% of the total 36719 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.52",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'162",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.69",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.69",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.05",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.46",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.49",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'165.66",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.86",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.08",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.37",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.09",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.05",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.1%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.90",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.49",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.69",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.74",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.89",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.01",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.4 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.49",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.51",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.53",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.53 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.41",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.74",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.95",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.26",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'405",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","319.09",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'661",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2143 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.40",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.95",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'399",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"50","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16136 excessive sectors (44% of the total 36735 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.32",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'765",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.61",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.61",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.05",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","22.32",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.45",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'042.01",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.66",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 1% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.15",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.06",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","29.03",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.16",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.88",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","41.25",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.45",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.61",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","45.81",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.73",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","0.94",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 9.1 sectors per request, or 9.1*32 = 290.3 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.6 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","29.04",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","70.96",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.66",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.66 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","26.39",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","26.72",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.32",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.82",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","298.73",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","97'982",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","302.48",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","99'214",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 1949 fused and 608 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","64.45",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","30.94",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","6'871",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.24",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.97",
"51","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 15785 excessive sectors (46% of the total 34497 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.41",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'960",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.73",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.73",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.49",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.50",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'156.12",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.89",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.59",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.39",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.4%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","42.75",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.50",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.73",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","47.67",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","16.28",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.02",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.8 sectors per request, or 8.8*32 = 280.7 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.70",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.30",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.52",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.52 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.14",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.47",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.28",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.78",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.17",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'375",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","318.98",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'626",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2140 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.00",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.76",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'397",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.12",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"52","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16088 excessive sectors (44% of the total 36669 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.47",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'864",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","4.77",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","4.77",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.89",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","21.47",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","2.52",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1'158.37",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","2.91",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full waves across all SMs. Look at Launch Statistics for more details."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 2% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.07",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.54",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","47.30",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (47.3%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","43.35",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","2.52",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","4.77",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","48.04",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","15.85",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","1.03",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses 8.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between threads, results in 8.7 sectors per request, or 8.7*32 = 278.8 bytes of cache data transfers per request. The optimal thread address pattern for 8.0 byte accesses would result in 8.0*32 = 256.0 bytes of cache data transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for uncoalesced global loads."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 2.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory request."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.74",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.26",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.51",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.77",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.51 active warps per scheduler, but only an average of 0.77 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.08",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","27.41",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.28",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","26.78",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","315.17",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","103'376",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","318.98",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","104'627",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 2140 fused and 668 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Grid Size","","6",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Threads","thread","6'144",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.07",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 6 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","62.09",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","29.80",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","7'398",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.10",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","1.07",
"53","3216714","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(6, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 16101 excessive sectors (44% of the total 36682 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
