Striped Box coloring (coloringBox 2x2x2),RTX3090,32x32x32,SymGS
"ID","Process ID","Process Name","Host Name","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description"
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.45",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'861",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.24",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.24",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.92",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.95",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.71",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'230.67",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.94",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.63",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.15",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","52.17",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.2%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.95",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.71",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.24",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.85",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.22",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.16",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.64",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.36",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.97",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.97 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.84",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.16",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.26",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.47",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'946",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.81",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'338",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6590 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.39",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.87",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'046",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.21",
"0","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34952 excessive sectors (35% of the total 98797 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.29",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.33",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'765",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.27",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.27",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.60",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.64",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'251.17",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.99",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.20",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.45",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","51.84",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (51.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","91.64",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.64",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.27",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.52",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.25",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.17",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.61",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.39",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","8.00",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 8.00 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.96",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.27",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.26",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.47",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'946",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.81",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'338",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6590 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.25",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.80",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'046",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.21",
"1","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30485 excessive sectors (32% of the total 94335 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.37",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'815",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.27",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.27",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.02",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.29",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.71",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'244.01",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.97",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.51",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","51.98",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.36",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.71",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.27",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.87",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.14",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.17",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.54",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.46",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.96",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.96 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.91",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.22",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.25",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.59",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'986",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.93",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'378",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6594 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.32",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.84",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'048",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.07",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.22",
"2","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34982 excessive sectors (35% of the total 98856 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.45",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'822",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.22",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.22",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.92",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.24",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.70",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'243.46",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.96",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.52",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","51.99",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.72",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.70",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.22",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.77",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.05",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.17",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.62",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.38",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","8.01",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 8.01 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.98",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.29",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.25",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.44",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.59",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'986",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.93",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'378",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6594 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.58",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.96",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'048",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.07",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.22",
"3","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30525 excessive sectors (32% of the total 94399 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.38",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'152",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.04",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.04",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.42",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.61",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'336.10",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.87",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.78",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.91",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.44",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.61",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.04",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.78",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.24",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.11",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.61",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.39",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.91",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.91 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.67",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.99",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'546",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.66",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'944",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.56",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.95",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'018",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.29",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.13",
"4","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34651 excessive sectors (35% of the total 98495 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.39",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'327",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","9.99",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","9.99",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.37",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.09",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.45",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'348.99",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.79",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.67",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.71",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.09",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.45",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","9.99",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.63",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.26",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.08",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.70",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.30",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","8.01",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 8.01 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.90",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.23",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.44",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'546",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.66",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'944",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.51",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.93",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'018",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.29",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.13",
"5","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30917 excessive sectors (33% of the total 94760 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.44",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'160",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.05",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.05",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.18",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.87",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.62",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'336.23",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.87",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.78",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.91",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","91.02",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.62",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.05",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.71",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.38",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.10",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.68",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.32",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.95",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.95 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.71",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.04",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.55",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'545",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.67",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'949",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.63",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.98",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'017",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.30",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.12",
"6","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34610 excessive sectors (35% of the total 98432 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.37",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'078",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.13",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.13",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","18.88",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.64",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'329.26",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.91",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.83",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","51.01",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (51.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","91.08",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.64",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.13",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.72",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.10",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.12",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.60",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.40",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.93",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.93 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.74",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.06",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.29",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'544",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.63",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'936",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.74",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","32.03",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'016",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.31",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.12",
"7","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30899 excessive sectors (33% of the total 94717 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.51",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.36",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'419",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","9.94",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","9.94",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","18.80",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.40",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'343.84",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.75",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.71",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.79",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.8%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.67",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.40",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","9.94",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.72",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.59",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.06",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.39",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.27",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.61",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.91",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.79",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.7 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.91 active warps per scheduler, but only an average of 0.79 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.89",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.22",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.29",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'544",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.63",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'936",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.68",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","32.01",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'016",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.31",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.12",
"8","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30899 excessive sectors (33% of the total 94717 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.37",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'073",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.10",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.10",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.21",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.77",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.50",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'349.71",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.91",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.66",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.70",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.7%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.83",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.50",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.10",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.70",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.78",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.12",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.73",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.27",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.99",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.99 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.81",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.14",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.55",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'545",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.67",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'949",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.43",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.89",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'017",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.30",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.12",
"9","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34610 excessive sectors (35% of the total 98432 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.42",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'271",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.02",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.02",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.27",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.00",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.44",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'363.45",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.82",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.09",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.55",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.10",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.49",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.5%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.68",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.44",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.02",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.56",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.44",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.09",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.56",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.44",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","8.07",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 8.07 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","29.30",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.63",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.44",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'546",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.66",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'944",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.57",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.95",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'018",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.29",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.13",
"10","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30917 excessive sectors (33% of the total 94760 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.35",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","19'097",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.10",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.10",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.24",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.37",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.63",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'338.39",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.90",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.10",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","27.76",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.11",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","50.87",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (50.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","90.63",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.63",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.10",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.80",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.23",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.12",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","27.80",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","72.20",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.99",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.79",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.6 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.99 active warps per scheduler, but only an average of 0.79 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.72",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","29.05",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.27",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","916.30",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","300'546",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","926.66",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'944",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6656 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","67.34",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","32.33",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'018",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.29",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.13",
"11","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34651 excessive sectors (35% of the total 98495 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.29",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.33",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'751",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.28",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.28",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.08",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.25",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.58",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'242.77",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","9.00",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.20",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.52",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","52.00",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","91.67",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.58",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.28",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.76",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.48",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.18",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.57",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.43",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.95",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.26",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.25",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.44",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.59",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'986",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.93",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'378",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6594 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.18",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.77",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'048",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.07",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.22",
"12","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30525 excessive sectors (32% of the total 94399 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.38",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'908",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.24",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.24",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","14.05",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","20.22",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.68",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'251.98",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.92",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.12",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.44",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","51.85",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (51.9%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.16",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.68",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.24",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.87",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.04",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.15",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.48",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.28",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.52",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.94",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.94 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.87",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.18",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.25",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.50",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.59",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'986",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.93",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'378",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6594 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.47",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'048",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.07",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.22",
"13","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34982 excessive sectors (35% of the total 98856 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.36",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.34",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'759",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.27",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.27",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.98",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.69",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.58",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'233.72",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.99",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.20",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.60",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","52.12",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.1%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.27",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.58",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.27",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","53.48",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.48",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.18",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.68",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.32",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","8.04",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.81",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 8.04 active warps per scheduler, but only an average of 0.81 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","28.05",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.37",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.26",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.47",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'946",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.81",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'338",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6590 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.69",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","32.01",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'046",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.21",
"14","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 30485 excessive sectors (32% of the total 94335 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","9.43",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.35",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","18'851",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","10.25",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","10.25",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","usecond","13.95",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","19.89",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","5.72",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","3'238.18",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","8.95",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","WRN","This kernel grid is too small to fill the available resources on this device, resulting in only 0.2 full waves across all SMs. Look at Launch Statistics for more details."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 5% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.13",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","0.19",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","28.56",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.14",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","52.05",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","FP64 is the highest-utilized pipeline (52.0%) based on active cycles, taking into account the rates of its different instructions. It executes 64-bit floating point operations. It is well-utilized, but should not be a bottleneck."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","92.77",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","5.72",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","10.25",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","55.87",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","18.28",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","3.16",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","MemoryWorkloadAnalysis_Tables","","","","MemoryCacheAccessPattern","WRN","The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only accesses an average of 1.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory request."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","28.60",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.29",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","71.40",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","7.98",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 3.5 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 7.98 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN"," The 8.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the hardware maximum of 12. Use the Occupancy section to identify what limits this kernel's theoretical occupancy."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","27.91",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","28.22",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","30.26",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","27.34",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","914.47",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","299'946",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","924.81",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","303'338",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 6590 fused and 2048 non-fused FP64 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP64 performance could be increased by up to 12% (relative to its current performance). Check the Source page to identify where this kernel executes FP64 instructions."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Block Size","","1'024",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Grid Size","","16",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","47",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Threads","thread","16'384",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","0.20",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","LaunchStats","","","","LaunchConfiguration","WRN","The grid for this launch is configured to execute only 16 blocks, which is less than the GPU's 82 multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel concurrently with other workloads, consider reducing the block size to have at least one block per multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model) description for more details on launch configurations."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","1",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","1",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","32",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","66.67",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","66.45",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","31.90",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy (66.7%) is limited by the number of required registers. This kernel's theoretical occupancy (66.7%) is limited by the number of warps within each block. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.07",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","22'046",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","92.08",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","3.21",
"15","3235745","run_profiler","127.0.0.1","striped_box_coloring_half_SymGS_kernel(int, long, int, int, int, int, int, int, long, long, int, int, long *, double *, double *, double *)","1","7","(1024, 1, 1)","(16, 1, 1)","0","8.6","SourceCounters","","","","UncoalescedGlobalAccess","WRN","This kernel has uncoalesced global accesses resulting in a total of 34952 excessive sectors (35% of the total 98797 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations. The CUDA Programming Guide (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional information on reducing uncoalesced device memory accesses."
